# This file specifies rules for correctness according to how frappe doctype data model works.

rules:
- id: frappe-breaks-multitenancy
  patterns:
    - pattern-either:
      - pattern: $VAR = <... frappe.db.$METHOD(...) ...>
      - pattern: $VAR = <... frappe.get_all(...) ...>
      - pattern: $VAR = <... frappe.get_list(...) ...>
      - pattern: $VAR = <... frappe.get_doc(...) ...>
      - pattern: $VAR = <... frappe.get_single(...) ...>
      - pattern: $VAR = <... frappe.get_cached_doc(...) ...>
      - pattern: $VAR = <... frappe.cache(...) ...>
      - pattern: $VAR = <... frappe.get_meta(...) ...>
      - pattern: $VAR = <... frappe.get_hooks(...) ...>
      - pattern: $VAR = <... frappe.local.$ATTR ...>
      - pattern: $VAR = <... frappe.conf ...>
      - pattern: $VAR = <... frappe.flags ...>
      - pattern: $VAR = <... frappe.lang ...>
      - pattern: $VAR = <... frappe._(...) ...>
      - pattern: $VAR = <... flt(...) ...>
    - pattern-not-inside: |
        def $FUNCTION(...):
          ...
  paths:
    exclude:
      - "**/test_*.py"
  message: |
    $VAR global variable does not respect database multitenancy, consider wrapping it in function or method call.
  languages: [python]
  severity: ERROR

- id: frappe-cache-breaks-multitenancy
  patterns:
    - pattern-either:
      - pattern: frappe.cache().set(...)
      - pattern: |
          $VAR = frappe.cache()
          $VAR.set(...)
      - pattern: frappe.cache().get(...)
      - pattern: |
          $VAR = frappe.cache()
          $VAR.get(...)
  message: |
    redis.set and redis.get do not support multitenancy, use set_value/get_value instead.
  languages: [python]
  severity: ERROR

- id: frappe-modifying-but-not-comitting
  patterns:
    - pattern: |
        def $METHOD(self, ...):
          ...
          self.$ATTR = ...
    - pattern-not: |
        def $METHOD(self, ...):
          ...
          self.$ATTR = ...
          ...
          self.db_set(..., self.$ATTR, ...)
    - pattern-not: |
        def $METHOD(self, ...):
          ...
          self.$ATTR = $SOME_VAR
          ...
          self.db_set(..., $SOME_VAR, ...)
    - pattern-not: |
        def $METHOD(self, ...):
          ...
          self.$ATTR = $SOME_VAR
          ...
          self.save()
    - metavariable-regex:
        metavariable: '$ATTR'
        # this is negative look-ahead, add more attrs to ignore like (ignore|ignore_this_too|ignore_me)
        regex: '^(?!ignore_linked_doctypes|status_updater)(.*)$'
    - metavariable-regex:
        metavariable: "$METHOD"
        regex: "(on_submit|on_cancel|after_insert|on_update|on_update_after_submit)"
  message: |
    DocType modified in self.$METHOD. Please check if modification of self.$ATTR is commited to database.
  languages: [python]
  severity: ERROR

- id: frappe-modifying-but-not-comitting-other-method
  patterns:
  - pattern: |
      class $DOCTYPE(...):
        def $METHOD(self, ...):
          ...
          self.$ANOTHER_METHOD()
          ...

        def $ANOTHER_METHOD(self, ...):
          ...
          self.$ATTR = ...
  - pattern-not: |
      class $DOCTYPE(...):
        def $METHOD(self, ...):
          ...
          self.$ANOTHER_METHOD()
          ...

        def $ANOTHER_METHOD(self, ...):
          ...
          self.$ATTR = ...
          ...
          self.db_set(..., self.$ATTR, ...)
  - pattern-not: |
      class $DOCTYPE(...):
        def $METHOD(self, ...):
          ...
          self.$ANOTHER_METHOD()
          ...

        def $ANOTHER_METHOD(self, ...):
          ...
          self.$ATTR = $SOME_VAR
          ...
          self.db_set(..., $SOME_VAR, ...)
  - pattern-not: |
      class $DOCTYPE(...):
        def $METHOD(self, ...):
          ...
          self.$ANOTHER_METHOD()
          ...
          self.save()
        def $ANOTHER_METHOD(self, ...):
          ...
          self.$ATTR = ...
  - metavariable-regex:
      metavariable: "$METHOD"
      regex: "(on_submit|on_cancel|after_insert|on_update|on_update_after_submit)"
  message: |
    self.$ANOTHER_METHOD is called from self.$METHOD, check if changes to self.$ATTR are commited to database.
  languages: [python]
  severity: ERROR

- id: frappe-print-function-in-doctypes
  pattern: print(...)
  message: |
      Did you mean to leave this print statement in? Consider using msgprint or logger instead of print statement.
  languages: [python]
  severity: WARNING
  paths:
      include:
        - "*/**/doctype/*"


- id: frappe-query-debug-statement
  pattern-either:
    - pattern: $FUNC(..., debug=True, ...)
    - pattern: $FUNC(..., debug=1, ...)
  message: |
      Did you mean to leave this debug statement in?
  languages: [python]
  severity: WARNING


- id: frappe-modifying-child-tables-while-iterating
  pattern-either:
    - pattern: |
        for $ROW in self.$TABLE:
            ...
            self.remove(...)
    - pattern: |
        for $ROW in self.$TABLE:
            ...
            self.append(...)
  message: |
      Child table being modified while iterating on it.
  languages: [python]
  severity: ERROR
  paths:
      include:
        - "*/**/doctype/*"

- id: frappe-same-key-assigned-twice
  pattern-either:
    - pattern: |
        {..., $X: $A, ..., $X: $B, ...}
    - pattern: |
        dict(..., ($X, $A), ..., ($X, $B), ...)
    - pattern: |
        _dict(..., ($X, $A), ..., ($X, $B), ...)
  message: |
      key `$X` is uselessly assigned twice. This could be a potential bug.
  languages: [python]
  severity: ERROR

- id: frappe-manual-commit
  patterns:
    - pattern: frappe.db.commit()
    - pattern-not-inside: |
        try:
          ...
        except ...:
          ...
  message: |
    Manually commiting a transaction is highly discouraged. Read about the transaction model implemented by Frappe Framework before adding manual commits: https://frappeframework.com/docs/user/en/api/database#database-transaction-model If you think manual commit is required then add a comment explaining why and `// nosemgrep` on the same line.
  paths:
      exclude:
        - "**/patches/**"
        - "**/demo/**"
  languages: [python]
  severity: ERROR

- id: frappe-using-db-sql
  pattern-either:
    - pattern: frappe.db.sql(...)
    - pattern: frappe.db.sql_ddl(...)
    - pattern: frappe.db.sql_list(...)
  paths:
    exclude:
      - "test_*.py"
  message: |
    The PR contains a SQL query that may be re-written with frappe.qb (https://frappeframework.com/docs/user/en/api/query-builder) or the Database API (https://frappeframework.com/docs/user/en/api/database)
  languages: [python]
  severity: WARNING

- id: frappe-overriding-local-proxies
  patterns:
    - pattern: frappe.$ATTR = ...
    - metavariable-regex:
        metavariable: $ATTR
        regex: ^(db|qb|conf|form|form_dict|request|response|session|user|flags|error_log|debug_log|message_log|lang)$
  message: |
    frappe.$ATTR is a local proxy, assigning it to another object will remove the proxying and replace it with another object. Use frappe.local.$ATTR instead.
  languages: [python]
  severity: ERROR


- id: frappe-single-value-type-safety
  patterns:
    - pattern-either:
      - pattern: frappe.db.get_value($DOCTYPE, $DOCTYPE, ...)
      - pattern: frappe.db.get_value($DOCTYPE, None, ...)
  message: |
    If $DOCTYPE is a single doctype then using `frappe.db.get_value` is discouraged for fetching value from single doctypes. frappe.db.get_value for single doctype is not type safe, use `frappe.db.get_single_value` instead.
  languages: [python]
  severity: ERROR

- id: frappe-set-value-semantics
  patterns:
    - pattern-either:
      - pattern: frappe.db.set_value($DOCTYPE, None, ...)
      - pattern: frappe.db.set_value($DOCTYPE, $DOCTYPE, ...)
  message: |
    If $DOCTYPE is a single doctype then using `frappe.db.set_value` is discouraged for setting values in DB. Use db.set_single_value for single doctype instead.
  languages: [python]
  severity: ERROR

- id: frappe-after-save-controller-hook
  pattern: |
    class $DOCTYPE($SOMEBASECLASS, ...):
      def after_save(self):
        ...
  message: |
    `after_save` is not a valid DocType controller hook. Please have a look at the hooks available: https://frappeframework.com/docs/v13/user/en/basics/doctypes/controllers#controller-hooks
  languages: [python]
  severity: ERROR

- id: frappe-qb-incorrect-order-usage
  patterns:
    - pattern-either:
      - pattern: $QUERY. ... .orderby(..., "asc")
      - pattern: $QUERY. ... .orderby(..., "desc")
      - pattern: $QUERY. ... .orderby(..., frappe.qb.desc)
      - pattern: $QUERY. ... .orderby(..., Order.desc)
      - pattern: $QUERY. ... .orderby(..., Order.asc)
    - pattern-not: $QUERY. ... .orderby(..., order=$LASTVAR)
  message: |
    `order` in `orderby` has to be a keyword argument like `.orderby("time", order=frappe.qb.desc)`. Re-check the generated query.
  languages: [python]
  severity: ERROR

- id: frappe-cur-frm-usage
  pattern: cur_frm
  message: |
    `cur_frm` is deprecated and can introduce buggy behaviour.
  languages: [javascript]
  severity: WARNING

- id: frappe-get-doc-for-creation
  patterns:
    - pattern-either:
      - pattern: |
          $DOC = frappe.get_doc(...)
          ...
          $DOC.insert(...)
      - pattern: |
          frappe.get_doc(...).insert(...)
  message: |
    `get_doc` should not be used for creating new document, use `new_doc` instead.
  languages: [python]
  severity: ERROR
